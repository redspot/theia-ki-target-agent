s2. "Safebook assumes that users might have identified trust in real life" - TrustSon likewise requires that two users establish a trust relationship before communicating (otherwise how are they going to establish access control to their data?); TrustSon relies on friend certifications to do this, though some real-life relationships must surely act as a starting point for this.
--> We do not deny the root of trust from real-life such as key signing meeting. Will revise the tone in related work.

s3. Is OpenPGP supported natively in Javascript? Installing an OpenPGP implementation seems  contrary to the web-only design goal of TrustSon
--> Yes, openPGP is supported in javascript (check reference)


s3.1. "embrace the Internet" - rephrase, I think you mean scale to large populations
--> accessible to a large population (try to be modest)

s4.1.1. "shared secrecy" - should be "shared secret"
- What key is used to create a MAC on the friendship request? Alice and Bob do not yet have a shared secret key.
--> MAC key is produced based on the public key. This part needs to be re-written to clarify the key management.

- It would seem prudent to include Alice's public key in the friendship request, rather than having Bob retrieve it out-of-band
--> explicitly establish this key for each other.

s4.1.2. IP-based limits provide only a rudimentary form of DoS protection.
--> Maybe do not mention this IP-based limit scheme at all. Or this can be put to Discussion section or future work.

s4.2. It is possible to modify the hosted code in a targeted way, such that a trojan version is given only to certain people, either by compromising the hosting service for the code or via an MITM attack. This would not be detected by auditing of other parties.
- It is true that people trust Google and other CDNs to host, say, jQuery, but a lot of the motivation behind decentralized OSNs is an explicit lack of trust in centralized providers, so I think the threat model is a bit different.
- Keybase.io relies on existing centralized social networks, such as twitter or github, to authenticate public keys. People wishing to participate in a decentralized OSN might not wish to have accounts that are linkable to such centralized sites.
--> Our intention is to provide private osn service, rather than anonymous service. The reason to provide end-to-end private safe service is to defend attacks against these servers which plays as the only centralized entity in this architecture. The safe server itself is not assumed to be malicious in the threat model. Need to clarify threat model.


s4.3.2. You need more evidence to establish that a DHT can function well in a setting where nodes are present for only 120 seconds every hour; this is a very high-churn situation as far as DHTs go.
--> Plan to shrink the overlay network part to make it a non-focus of the paper. List DHT as one of the candidate to host the message delivery overlay network.
The reason is P2P overlay network is a well researched area with abundant mature solutions. We implement the basic flooding scheme to demonstrate the operatability of the service.


s5.2. "two-hand interaction" - "two-step interaction"? not sure what "two-hand" means.
--> Will use "two-step".

s5.4. equivocation seems easy when talking directly to online friends, and possibly in other scenarios as well. In some sense, sending an update from A to B that is *not* seen by C is actually a desirable feature for certain types of communication.
--> Will add a short case study of the equivocation issue. Anonymity is not the focus of the paper. Will clarify in the design target.



- The idea of a privacy-preserving social network is not new, and previous
  work has also looked at the decentralized setting.
--> Will emphacize on the web+P2P selling point that is new.

- Some of the design choices do not appear to bring advantages over previous
  work.
--> Not sure what the reviewer means.

- The underlying mechanisms do not seem to support some important OSN
  features.
--> Need a more organized Discussion or future work section. Lower the ambition of a complete OSN, but infrastructure to host OSN.
Then we are free of providing various functions an OSN is supposed to provide, but list the extensibility of trustson in the Discussion section.

