#include <linux/version.h>

#if defined(CONFIG_X86_64) && (LINUX_VERSION_CODE >= KERNEL_VERSION(4,17,0))
#define PTREGS_SYSCALL_STUBS 1
#endif

#ifdef PTREGS_SYSCALL_STUBS
#define PTREGS_CHK_PROTO(...) struct pt_regs *regs
#define PTREGS_CHK_ARGS(...) regs
#else
#define PTREGS_CHK_PROTO(...) __VA_ARGS__
#define PTREGS_CHK_ARGS(...) __VA_ARGS__
#endif

#define TP_FIELDS(...)
#define sc_exit(...)
#define TP_PROTO(...) __VA_ARGS__
#define TP_ARGS(...) __VA_ARGS__

/*
gcc -Wall -E -xc theia_hook_test.h.pre \
| sed -e $'s/__NL__/\\\n/g' \
| sed -e 's/DEFINE/#define/g' \
| grep -v '^# ' \
> theia_hook_test.h
 */

#define SC_LTTNG_TRACEPOINT_EVENT(_name, _proto, _args, _fields) \
DEFINE SC_PROTO_##_name PTREGS_CHK_PROTO(_proto) __NL__\
DEFINE SC_ARGS_##_name PTREGS_CHK_ARGS(_args) __NL__\
static asmlinkage long (*real_sys_##_name)(SC_PROTO_##_name); __NL__\
static asmlinkage long theia_hook_##_name(SC_PROTO_##_name);

/*
 * each declaration of theia_hook_##_name must be defined.
 * also, this header should only be included in theia_syscalls.c source.
 * if it is included anywhere else, the undefined static functions will generate
 * a compile error.
 */
PRAGMA GCC diagnostic error "-Wunused-function"

SC_LTTNG_TRACEPOINT_EVENT(clone,
	TP_PROTO(sc_exit(long ret,) unsigned long clone_flags, unsigned long newsp,
		void __user *parent_tid,
		void __user *child_tid,
        struct pt_regs *regs),
	TP_ARGS(sc_exit(ret,) clone_flags, newsp, parent_tid, child_tid, regs),
	TP_FIELDS(
		sc_exit(ctf_integer(long, ret, ret))
		sc_in(ctf_integer_hex(unsigned long, clone_flags, clone_flags))
		sc_in(ctf_integer_hex(unsigned long, newsp, newsp))
		sc_in(ctf_integer_hex(void *, parent_tid, parent_tid))
		sc_in(ctf_integer_hex(void *, child_tid, child_tid))
	)
)

SC_LTTNG_TRACEPOINT_EVENT(execve,
	TP_PROTO(sc_exit(long ret,) const char *filename, char *const *argv, char *const *envp, struct pt_regs *regs),
	TP_ARGS(sc_exit(ret,) filename, argv, envp, regs),
	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret))
		sc_in(ctf_user_string(filename, filename))
		sc_in(ctf_integer_hex(char *const *, argv, argv))
		sc_in(ctf_integer_hex(char *const *, envp, envp))
	)
)

SC_LTTNG_TRACEPOINT_EVENT(read,
	TP_PROTO(sc_exit(long ret,) unsigned int fd, char * buf, size_t count),
	TP_ARGS(sc_exit(ret,) fd, buf, count),
	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_out(ctf_integer(char *, buf, buf)) sc_in(ctf_integer(size_t, count, count)))
)

SC_LTTNG_TRACEPOINT_EVENT(write,
	TP_PROTO(sc_exit(long ret,) unsigned int fd, const char * buf, size_t count),
	TP_ARGS(sc_exit(ret,) fd, buf, count),
	TP_FIELDS(sc_exit(ctf_integer(long, ret, ret)) sc_in(ctf_integer(unsigned int, fd, fd)) sc_in(ctf_integer(const char *, buf, buf)) sc_in(ctf_integer(size_t, count, count)))
)
